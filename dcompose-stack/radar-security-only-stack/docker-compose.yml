---
version: '2'

networks:
  api:
    driver: bridge
  zookeeper:
    driver: bridge
  kafka:
    driver: bridge

services:

  #---------------------------------------------------------------------------#
  # Zookeeper Cluster                                                         #
  #---------------------------------------------------------------------------#
  zookeeper-1:
    image: confluentinc/cp-zookeeper:3.1.2-1
    networks:
      - zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888

  #---------------------------------------------------------------------------#
  # Kafka Cluster                                                             #
  #---------------------------------------------------------------------------#
  kafka-1:
    image: confluentinc/cp-kafka:3.1.2-1
    networks:
      - kafka
      - zookeeper
    depends_on:
      - zookeeper-1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"

  kafka-2:
    image: confluentinc/cp-kafka:3.1.2-1
    networks:
      - kafka
      - zookeeper
    depends_on:
      - kafka-1
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"

  kafka-3:
    image: confluentinc/cp-kafka:3.1.2-1
    networks:
      - kafka
      - zookeeper
    depends_on:
      - kafka-2
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"

  #---------------------------------------------------------------------------#
  # Schema Registry                                                           #
  #---------------------------------------------------------------------------#
  schema-registry-1:
    image: confluentinc/cp-schema-registry:3.1.2-1
    networks:
      - kafka
      - zookeeper
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    restart: always
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper-1:2181
      SCHEMA_REGISTRY_HOST_NAME: schema-registry-1
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry-1:8081

  #---------------------------------------------------------------------------#
  # REST proxy                                                                #
  #---------------------------------------------------------------------------#
  rest-proxy-1:
    image: confluentinc/cp-kafka-rest:3.1.2-1
    networks:
      - kafka
      - zookeeper
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - schema-registry-1
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_REST_LISTENERS: http://rest-proxy-1:8082
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry-1:8081
      KAFKA_REST_HOST_NAME: rest-proxy-1

  #---------------------------------------------------------------------------#
  # Kafka Init                                                                #
  #---------------------------------------------------------------------------#
  kafka-init:
    build: kafka-radarinit
    image: radarcns/kafka-init:3.1.2-1
    networks:
      - kafka
      - zookeeper
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - rest-proxy-1
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_REST_PROXY: http://rest-proxy-1:8082
      KAFKA_BROKERS: 3
      RADAR_TOPICS: ${RADAR_TOPIC_LIST}
      RADAR_PARTITIONS: 3
      RADAR_REPLICATION_FACTOR: 3

  #---------------------------------------------------------------------------#
  # RADAR Hot Storage                                                         #
  #---------------------------------------------------------------------------#
  hotstorage:
    image: radarcns/radar-hotstorage:0.1
    networks:
      - api
    volumes:
      - "${MONGODB_DIR}/db:/data/db"
      - "${MONGODB_DIR}/configdb:/data/configdb"
    ports:
      - "27017:27017"
      - "28017:28017"
    environment:
      RADAR_USER: ${HOTSTORAGE_USERNAME}
      RADAR_PWD: ${HOTSTORAGE_PASSWORD}
      RADAR_DB: ${HOTSTORAGE_NAME}

  #---------------------------------------------------------------------------#
  # RADAR REST API                                                            #
  #---------------------------------------------------------------------------#
  rest-api:
    image: radarcns/radar-restapi:0.1
    networks:
      - api
    ports:
      - "8080:8080"
    depends_on:
      - hotstorage
    environment:
      MONGODB_USER: ${HOTSTORAGE_USERNAME}
      MONGODB_PASS: ${HOTSTORAGE_PASSWORD}
      MONGODB_DATABASE: ${HOTSTORAGE_NAME} 
      MONGODB_HOST: hotstorage:27017


  #---------------------------------------------------------------------------#
  # WSO2 Identity Server                                                      #
  #---------------------------------------------------------------------------#
  is:
    image: isim/wso2is:$IS_VERSION
    networks:
      - api
    hostname: localhost
    ports:
    - "9443:9443"
    - "9763:9763"
    volumes:
    - ./wso2is/master-datasources.xml:/opt/wso2is-$IS_VERSION/repository/conf/datasources/master-datasources.xml
    - ./wso2is/carbon.xml:/opt/wso2is-$IS_VERSION/repository/conf/carbon.xml
    - ./wso2is/registry.xml:/opt/wso2is-$IS_VERSION/repository/conf/registry.xml
    - ./wso2is/user-mgt.xml:/opt/wso2is-$IS_VERSION/repository/conf/user-mgt.xml
    - ./wso2is/sso-idp-config.xml:/opt/wso2is-$IS_VERSION/repository/conf/security/sso-idp-config.xml

